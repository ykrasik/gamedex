task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task testJar(type: Jar, dependsOn: testClasses) {
    archiveAppendix = 'testkit'
    from sourceSets.test.output
}

task testSourcesJar(type: Jar) {
    archiveAppendix = 'testkit'
    archiveClassifier = 'sources'
    from sourceSets.test.allSource
}

configurations {
    testArtifacts.extendsFrom testRuntime
    testDependencies.extendsFrom testImplementation
    testRuntimeOnlyDependencies.extendsFrom testRuntimeOnly
}

artifacts {
    testArtifacts testJar
}

sourceSets {
    main {
        kotlin {
            srcDir "${buildDir}/generated/src/main/kotlin/"
        }
        resources {
            srcDir "${buildDir}/generated/src/main/resources/"
        }
    }
}

ext {
    fullDependency = { String dep ->
        dependencies {
            api project(dep)
            testImplementation project(path: dep, configuration: 'testArtifacts')
            testImplementation project(path: dep, configuration: 'testDependencies')
        }
    }

    testDependency = { String dep ->
        dependencies {
            testImplementation project(path: dep, configuration: 'testDependencies')
        }
    }

    generatedSources = sourceSets.main.kotlin.srcDirs.find { (it as File).absolutePath.contains('generated') }
    generatedResources = sourceSets.main.resources.srcDirs.find { (it as File).absolutePath.contains('generated') }
}
