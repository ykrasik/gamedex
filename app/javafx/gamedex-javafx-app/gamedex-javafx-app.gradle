apply from: gradleFile('application.gradle')
mainClassName = "com.gitlab.ykrasik.gamedex.javafx.Main"
apply plugin: 'javafx-gradle-plugin'
//apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    fullDependency ":core:gamedex-core"
    fullDependency ":app:javafx:gamedex-javafx-view"

    testImplementation project(":core:gamedex-core-persistence")

    pluginProjects().forEach {
        testRuntime project(path: it.path, configuration: 'testArtifacts')
    }

//    compile bootstrapFx
}

jfx {
//    verbose = true
    mainClass = mainClassName
    jfxMainAppJarName = "gamedex-${version}.jar"
    identifier = "faeb5e02-a70d-4f15-b09b-77022499cd18"
    vendor = "Yevgeny Krasik"
    jvmProperties = ["-Xmx": javaMaxHeap]
//    useLibFolderContentForManifestClasspath = true
//    fixedManifestClasspath = "jfxMainAppJarName"
//    fixedManifestClasspath = "$jfxMainAppJarName;./lib/*;./plugins/*"
//    jvmArgs = ['-cp', jfxMainAppJarName + ';lib/*;plugins/*', 'com.gitlab.ykrasik.gamedex.javafx.Main']
//    addPackagerJar = false
//    useLibFolderContentForManifestClasspath = true
//    copyAdditionalAppResourcesToJar = true
//    skipCopyingDependencies = true
//    alternativePathToJarFile = shadowJar.outputs.files[0]
//    alternativePathToJarFile = shadowJar
    nativeReleaseVersion = version
    needShortcut = true
    needMenu = true
    appName = "GameDex"
    skipJNLP = true
    skipMainClassScanning = true
    usePatchedJFXAntLib = false
}

task customizeWindowsInstaller(type: Copy) {
    from 'src/main/deploy/package/windows/'
    into 'src/main/deploy/package/windows/'
    include 'gamedex.iss.template'
    rename { file -> 'gamedex.iss' }
    expand(version: version)
}

task cleanInstallerIss(type: Delete) {
    delete 'src/main/deploy/package/windows/gamedex.iss'
}

task copyPluginsDist(type: Copy) {
    from pluginProjects().shadowJar
    into new File(project.buildDir, "/jfx/app/plugins")
}

jfxNative {
//    dependsOn shadowJar
    dependsOn rootProject.subprojects.assemble
    dependsOn customizeWindowsInstaller
    dependsOn copyPluginsDist
    finalizedBy cleanInstallerIss
}

task cleanJfxNative(type: Delete) {
    delete new File(project.buildDir, "jfx")
}

task dist(type: Copy, dependsOn: jfxNative) {
    from new File(project.buildDir, "jfx/native")
    into new File(project.rootDir, "dist")
}

task cleanDist(type: Delete) {
    delete new File(project.rootDir, "dist")
}

clean.finalizedBy cleanDist

task runDemo(dependsOn: 'classes', type: JavaExec) {
    main = 'com.gitlab.ykrasik.gamedex.javafx.TestApplication'
    classpath = sourceSets.test.runtimeClasspath
}